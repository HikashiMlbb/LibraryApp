networks:
  app:
    driver: bridge

services:
  web:
    container_name: "web"
    restart: always
    build: 
      context: src/LibraryApp.Web
      dockerfile: Dockerfile
    ports:
      - "8000"
    depends_on:
      - webapi
    networks:
      app:
        aliases:
          - "web"

  webapi:
    container_name: "webapi"
    restart: always
    build:
      context: .
      dockerfile: src/LibraryApp.API/Dockerfile
    ports:
      - "8001"
    depends_on: 
      sqlserver:
        condition: service_healthy
    networks: 
      app:
        aliases:
          - "webapi"
    env_file: 
      - backend.env

  sqlserver:
    container_name: sqlserver
    image: mcr.microsoft.com/mssql/server:2022-latest
    env_file:
      - backend.env
    ports:
      - "1433"
    networks: 
      - app
    healthcheck:
      test: opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "saroot1234A$" -C
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    volumes:
      - sqlvolume:/var/opt/mssql
  
  nginx:
    container_name: ngnix
    image: nginx:mainline
    networks:
      app:
        aliases:
          - "nginx"
    links:
      - web
      - webapi
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"

volumes:
  sqlvolume:
